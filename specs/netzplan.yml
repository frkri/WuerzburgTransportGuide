openapi: 3.0.0
info:
  title: Netzplan
  version: 1.0.0
servers:
  - url: https://netzplan.vvm-info.de/api
    description: |
      The Netzplan API is a collection of endpoints that provide information about the public transport network in the VVM area.
      The API is used by the [netzplan.vvm-info.de](https://netzplan.vvm-info.de/api), it is not intended for external use.
      
      The API requires a valid CSRF token to be sent in the `X-XSRF-Token` header. The token can be retrieved from the `XSRF-TOKEN` cookie that is set when visiting the website and must be sent on further request.
      Also the cookie `laravel_token`, which serves the purpose of a session cookie, is required to be sent in the `Cookie` header.
      This is not defined in the OpenAPI specification, but is required for the API to work.
      See [this](https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-header_token) Wikipedia page for more info.
      
      In addition the spec defines custom formats for the `coords`, `coordsList`, `localDateTime` and other types to help with the usage of the API in code.
      The Java implementation can be found in ``io.github.wuerzburgtransportguide.client.adapters`` for the GSON adapters and ``io.github.wuerzburgtransportguide.client.model`` for the models.
paths:
  /journeyplanners/efa_xml/locations/{stationId}/stationboard/departure:
    get:
      operationId: getDepartures
      summary: Get departures of a stop, including 'realtime' data
      tags:
        - netzplan
      responses:
        "200":
          description: List of departures of the given stop
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    dateTime:
                      type: object
                      properties:
                        hour:
                          type: integer
                        minute:
                          type: integer
                        year:
                          type: integer
                        month:
                          type: integer
                        day:
                          type: integer
                        weekday:
                          type: integer
                    servingLine:
                      type: object
                      properties:
                        number:
                          type: string
                        direction:
                          type: string
                        realtime:
                          type: integer
                        delay:
                          type: integer
                    platformName:
                      type: string
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
      parameters:
        - $ref: "#/components/parameters/Locale"
        - name: stationId
          description: The ID of the stop, also called idefa in the EFA API
          example: de:09663:436
          in: path
          required: true
          schema:
            type: string
  /journeyplanners/efa_xml/places:
    get:
      operationId: getPlaces
      summary:
        Search for places similar to the given name query, can be used for
        autocomplete in input fields
      tags:
        - netzplan
      responses:
        "500":
          description: API could not find any places for the given query or an error occurred. Its probably the first one.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Server Error
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Poi"
      parameters:
        - $ref: "#/components/parameters/Locale"
        - name: term
          in: query
          required: false
          schema:
            type: string
  /journeyplanners/efa_xml/journeys:
    post:
      operationId: getJourneys
      summary: Retrieve journeys between two locations at a given time
      tags:
        - netzplan
      responses:
        "200":
          description: List of journeys with start and end time, duration and connections
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    alternative:
                      type: string
                    distance:
                      type: string
                    duration:
                      type: string
                    interchange:
                      type: string
                    legs:
                      type: array
                      items:
                        type: object
                        properties:
                          timeMinute:
                            type: string
                          mode:
                            type: object
                            properties:
                              code:
                                type: integer
                              destination:
                                type: string
                                description: Name of the destination
                              name:
                                type: string
                              product:
                                type: string
                              destID:
                                type: string
                              mtSubcode:
                                type: integer
                              symbol:
                                type: string
                              type:
                                type: string
                          info:
                            type: array
                            items: { }
                          points:
                            type: array
                            items:
                              type: object
                              properties:
                                usage:
                                  type: string
                                dateTime:
                                  type: object
                                  properties:
                                    date:
                                      type: string
                                      format: date
                                      example: 17.01.2024
                                    rtDate:
                                      type: string
                                      format: date
                                      example: 17.01.2024
                                    time:
                                      type: string
                                      format: time
                                      example: 16:35
                                    rtTime:
                                      type: string
                                      format: time
                                      example: 16:35
                                name:
                                  type: string
                                nameWO:
                                  type: string
                                place:
                                  type: string
                                platformName:
                                  type: string
                                pointType:
                                  type: string
                                plannedPlatformName:
                                  type: string
                                placeID:
                                  type: string
                                ref:
                                  type: object
                                  properties:
                                    coords:
                                      type: string
                                      format: coordinates
                                    platform:
                                      type: string
                          stopSeq:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                nameWO:
                                  type: string
                                place:
                                  type: string
                                platformName:
                                  type: string
                                placeID:
                                  type: integer
                                ref:
                                  type: object
                                  properties:
                                    coords:
                                      type: string
                                      format: coordinates
                                    platform:
                                      type: string
                                    depDelay:
                                      type: integer
                                    depValid:
                                      type: integer
                                    arrDelay:
                                      type: integer
                                    arrValid:
                                      type: integer
                                    arrDateTime:
                                      type: string
                                      format: localDateTime
                                      nullable: true
                                    depDateTime:
                                      type: string
                                      format: localDateTime
                                      nullable: true
                          path:
                            type: string
                            format: coordinatesList
                    products:
                      type: array
                      items:
                        type: object
                        properties:
                          icon:
                            type: string
                            format: url
                          icon_path:
                            type: string
                          title:
                            type: string
                            nullable: true
      parameters:
        - $ref: "#/components/parameters/Locale"
      requestBody:
        required: true
        description:
          Must contain origin, destination, date and time. Origin and destination
          can be retrieved from the places endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                origin:
                  $ref: "#/components/schemas/Poi"
                destination:
                  $ref: "#/components/schemas/Poi"
                date:
                  type: string
                  format: date-time
                time:
                  type: string
                  format: date-time
                departure:
                  type: integer
                  description: Unknown purpose, should be 1 for the time being
                  default: 1
                options:
                  type: object
                  description: Unknown purpose, should be null for the time being
                  nullable: true

components:
  schemas:
    Poi:
      type: object
      properties:
        title:
          type: string
        name:
          type: string
        type:
          $ref: "#/components/schemas/PoiType"
        idefa:
          type: string
          example: de:09663:436
        centerx:
          type: number
          format: double
        centery:
          type: number
          format: double

    PoiType:
      type: string
      enum:
        - stop
        - poi
        - street

  parameters:
    Locale:
      name: locale
      in: query
      description: The locale to use for the response. Must be a valid IETF language tag (IETF BCP 47)
      required: false
      schema:
        type: string
        format: locale
      examples:
        en:
          value: en-us
        de:
          value: de-de

x-path-templates:
  # Remove the ignore: prefix to generate an endpoint with its URL
  # Lines that are closer to the top take precedence, the matching is greedy
  - ignore:/bc-drawing/ilnp
  - ignore:/maps/tlnp/layersets
  - ignore:/wms-layers/wvvwuerzburg_haltestellen_gesamt/features
  - ignore:/journeyplanners/efa_xml/locations
  - ignore:/search-radius
